apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rumpel.fullname" . }}
  labels:
    {{- include "rumpel.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rumpel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rumpel.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: shared-data
        emptyDir: {}
      initContainers: # write content of variable contract to disk as contract.json
      - name: "create-contract"
        image: registry.access.redhat.com/ubi8/ubi:latest
        env:
          - name: CONTRACT
            value: {{ .Values.rumpelContract | b64enc | quote }}
        command: ['sh', '-c', 'echo $(CONTRACT) | base64 --decode && echo $(CONTRACT) | base64 --decode > /contracts/contract.json']
        volumeMounts:
        - mountPath: "/contracts/"
          name: shared-data
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rumpel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:          
          {{  range .Values.arguments }}
            - {{ . }}
          {{ end }}
          ports:
            - name: http
              containerPort: 8181
              protocol: TCP
          volumeMounts:
          - mountPath: "/contracts/"
            name: shared-data
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
